//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Buzzle.Api.Core
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Buzzle.DataModel;
    
    public partial class BuzzleLocalDBEntities : DbContext
    {
        public BuzzleLocalDBEntities()
            : base("name=BuzzleLocalDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountPosting> AccountPostings { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<FaultType> FaultTypes { get; set; }
        public virtual DbSet<JobItemType> JobItemTypes { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<PurchaseItem> PurchaseItems { get; set; }
        public virtual DbSet<Purchase> Purchases { get; set; }
        public virtual DbSet<SaleItem> SaleItems { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<StockItemMovement> StockItemMovements { get; set; }
        public virtual DbSet<StockItemType> StockItemTypes { get; set; }
        public virtual DbSet<Supply> Supplies { get; set; }
        public virtual DbSet<SupplyItem> SupplyItems { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<BuzzleSetting> BuzzleSettings { get; set; }
        public virtual DbSet<JobHistory> JobHistories { get; set; }
        public virtual DbSet<JobPayment> JobPayments { get; set; }
        public virtual DbSet<LookupData> LookupDatas { get; set; }
        public virtual DbSet<AccountStat> AccountStats { get; set; }
        public virtual DbSet<StockItemBalance> StockItemBalances { get; set; }
    
        public virtual ObjectResult<FindSales_Result> FindSales(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> recordedByUserID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var recordedByUserIDParameter = recordedByUserID.HasValue ?
                new ObjectParameter("RecordedByUserID", recordedByUserID) :
                new ObjectParameter("RecordedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindSales_Result>("FindSales", startDateParameter, endDateParameter, recordedByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetJobPaymentAmount(Nullable<int> jobID)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetJobPaymentAmount", jobIDParameter);
        }
    }
}
